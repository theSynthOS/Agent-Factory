import { type Action, type IAgentRuntime, type Memory, type ActionExample, type HandlerCallback, type State, generateText, ModelClass, Content } from "@elizaos/core";
// import { initWalletProvider } from "../providers/wallet";

export const createMultisigAction: Action = {
    name: "CREATE_MULTISIG",
    similes: ["CREATE_MULTISIG", "START_PLAN", "EXECUTE_PLAN"],
    validate: async (_runtime: IAgentRuntime, _message: Memory) => {
        return true;
    },
    description:
        "Create a multisig wallet for the user based on the user's criteria once a user had choosen the asset to invest in",
    handler: async ( _runtime: IAgentRuntime,
        _message: Memory,
        _state: State,
        _options: { [key: string]: unknown },
        _callback: HandlerCallback): Promise<boolean> => {

        // Simple response for testing
        _callback({
            text: "Testing multisig creation",
        });

        return true;
    },
    examples: [] as ActionExample[][],
} as Action;
